builder:
  track: dev

labels:
  app: estafette-io
  app-group: estafette-ci
  team: estafette-team
  language: hugo

stages:
  git-clone:
    image: extensions/git-clone:dev
    shallow: false

  hugoify:
    image: estafette/hugo:0.54
    env:
      GIT_USER_EMAIL: estafette.secret(0ZJRd1ti_4HlsYz6.ie7ynUsbOMTuDEkvBdvDAmB1UL9Hu0YmxTpEve2ARAE_wTonhpe65Ek=)
      GIT_USER_NAME: estafette.secret(nbg9Avv8R7CoZ1O4.GDU-1JwnPpzaBsDcjJhX4CyRhspe4amlBflh3OQoPQ==)
    commands:
    - git config --global user.email "${GIT_USER_EMAIL}"
    - git config --global user.name "${GIT_USER_NAME}"

    - echo "Initializing ${ESTAFETTE_BUILD_VERSION} branch from origin/master"
    - git checkout -b ${ESTAFETTE_BUILD_VERSION} origin/master
    - git push origin ${ESTAFETTE_BUILD_VERSION}
    - git checkout ${ESTAFETTE_GIT_BRANCH}
    - git checkout ${ESTAFETTE_GIT_REVISION}

    - echo "Deleting old publication"
    - rm -rf public
    - mkdir public
    - git worktree prune
    - rm -rf .git/worktrees/public/

    - echo "Checking out ${ESTAFETTE_BUILD_VERSION} branch into public"
    - git worktree add -B ${ESTAFETTE_BUILD_VERSION} public origin/${ESTAFETTE_BUILD_VERSION}
    - echo "Removing existing files"
    - rm -rf public/* public/.estafette.yaml public/.nojekyll

    - echo "Generating site"
    - hugo version
    - hugo --minify

    - echo "Updating ${ESTAFETTE_BUILD_VERSION} branch"
    - cp CNAME public/CNAME
    - cp .nojekyll public/.nojekyll
    - LOG_MESSAGE=$(git log --format=%B -n 1)
    - cd public && git add --all && git commit --allow-empty -m "${ESTAFETTE_BUILD_VERSION} - ${LOG_MESSAGE}"
    - git push origin ${ESTAFETTE_BUILD_VERSION}

    - echo "Creating pull request for ${ESTAFETTE_BUILD_VERSION} branch"
    - ESTAFETTE_GIT_URL=$(git remote get-url origin)
    - 'curl -u ${ESTAFETTE_GIT_URL:8:58} -XPOST https://api.github.com/repos/estafette/estafette.io/pulls -d "{\"title\": \"${ESTAFETTE_BUILD_VERSION} - ${LOG_MESSAGE}\", \"head\": \"${ESTAFETTE_BUILD_VERSION}\", \"base\": \"master\"}"'
    when:
      status == 'succeeded' &&
      branch == 'source'

  slack-notify:
    image: extensions/slack-build-status:dev
    workspace: estafette
    channels:
    - '#build-status'
    when:
      status == 'succeeded' ||
      status == 'failed'