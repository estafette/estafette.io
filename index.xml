<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Estafette CI on Estafette CI/CD</title><link>https://estafette.io/</link><description>Recent content in Estafette CI on Estafette CI/CD</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><atom:link href="https://estafette.io/index.xml" rel="self" type="application/rss+xml"/><item><title>Installation</title><link>https://estafette.io/getting-started/installation/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://estafette.io/getting-started/installation/</guid><description>Installing Estafette CI Prerequisites:
install https://github.com/estafette/estafette-cloudflare-dns install https://github.com/estafette/estafette-letsencrypt-certificate install https://github.com/estafette/k8s-cockroachdb Configure cluster roles and binding:
curl https://raw.githubusercontent.com/estafette/estafette-ci-api/master/rbac.yaml -o rbac.yaml export NAMESPACE=estafette export APP_NAME=estafette-ci-api kubectl apply -f rbac.yaml Install the API:
curl https://raw.githubusercontent.com/estafette/estafette-ci-api/master/kubernetes.yaml -o kubernetes.yaml export NAMESPACE=estafette export APP_NAME=estafette-ci-api export TEAM_NAME=tooling-team export HOSTNAMES=ci.estafette.io export CLOUDFLARE_IP_RANGES=103.21.244.0/22, 103.22.200.0/22, 103.31.4.0/22, 104.16.0.0/12, 108.162.192.0/18, 131.0.72.0/22, 141.101.64.0/18, 162.158.0.0/15, 172.64.0.0/13, 173.245.48.0/20, 188.114.96.0/20, 190.93.240.0/20, 197.234.240.0/22, 198.41.128.0/17 export GITHUB_APP_PRIVATE_KEY= export VERSION=123456 export GO_PIPELINE_LABEL=latest export CPU_REQUEST=10m export MEMORY_REQUEST=15Mi export CPU_LIMIT=200m export MEMORY_LIMIT=512Mi export GITHUB_APP_ID=1234 export GITHUB_APP_OAUTH_CLIENT_ID=ab3.</description></item><item><title>Manifest</title><link>https://estafette.io/usage/manifest/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://estafette.io/usage/manifest/</guid><description>Usage in your application To build your application with Estafette add an .estafette.yaml file to your application repository.
# these labels turn into ESTAFETTE_LABEL_... envvars, automatically injected into all pipeline stepslabels:app:estafette-ci-builderteam:estafette-teamlanguage:golang# semver version generates a 0.0.x version (or 0.0.x-&amp;lt;branch&amp;gt; for other branches than the release branch)# made available as ESTAFETTE_BUILD_VERSION envvar, automatically injected into all pipeline stepsversion:semver:major:0minor:0patch:&amp;#39;{{auto}}&amp;#39;labelTemplate:&amp;#39;{{branch}}&amp;#39;releaseBranch:master# global environments variables that are automatically injected into all pipeline steps and can be# overridden by defining an envvar in a pipeline step with the same nameenv:VAR1:somevalueVAR2:anothervalue# pipeline stages are executed sequentially;# a step uses a public container to mount the working directory into and execute commands in;# extensions are containerized applications that execute based on injected environment variables or# custom properties injected as ESTAFETTE_EXTENSION_&amp;lt;PROPERTY&amp;gt; envvars# executing or skipping a step is controlled by the &amp;#39;when&amp;#39; propertystages:set-pending-build-status:image:extensions/github-status:stablestatus:pendingbuild:image:golang:1.</description></item><item><title>Configuration</title><link>https://estafette.io/getting-started/configuration/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://estafette.io/getting-started/configuration/</guid><description/></item><item><title>Extensions</title><link>https://estafette.io/usage/extensions/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://estafette.io/usage/extensions/</guid><description/></item><item><title>Examples</title><link>https://estafette.io/usage/examples/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://estafette.io/usage/examples/</guid><description>golang labels:app:&amp;lt;APPNAME&amp;gt; language: golangstages:build:image:golang:1.10.3-alpine3.8workDir:/go/src/github.com/estafette/${ESTAFETTE_LABEL_APP}commands:-gotest`golist./...| grep -v /vendor/` - CGO_ENABLED=0 GOOS=linux go build -a -installsuffix cgo -ldflags &amp;#34;-X main.version=${ESTAFETTE_BUILD_VERSION} -X main.revision=${ESTAFETTE_GIT_REVISION} -X main.branch=${ESTAFETTE_GIT_BRANCH} -X main.buildDate=${ESTAFETTE_BUILD_DATETIME}&amp;#34; -o ./publish/${ESTAFETTE_LABEL_APP} . csharp .net core labels:app:&amp;lt;APPNAME&amp;gt; language: dotnet-corestages:restore:image:microsoft/dotnet:2.1-sdkcommands:-dotnetrestore--sourcehttps://www.nuget.org/api/v1--sourcehttp://nuget-server.tooling/nuget--packages.nuget/packagesbuild:image:microsoft/dotnet:2.1-sdkcommands:-dotnetbuild--configurationRelease--version-suffix${ESTAFETTE_BUILD_VERSION_PATCH}unit-tests:image:microsoft/dotnet:2.1-sdkcommands:-dotnettest--configurationRelease--no-buildtest/&amp;lt;unittestprojectdirectory/&amp;lt;unittestprojectfile&amp;gt;.csprojintegration-tests:image:microsoft/dotnet:2.1-sdkcommands:-dotnettest--configurationRelease--no-buildtest/&amp;lt;integrationtestprojectdirectory&amp;gt;/&amp;lt;integrationtestprojectfile&amp;gt;.csprojpublish:image:microsoft/dotnet:2.1-sdkcommands:-dotnetpublishsrc/&amp;lt;publisheableprojectdirectory&amp;gt; --configuration Release --runtime debian.8-x64 --version-suffix ${ESTAFETTE_BUILD_VERSION_PATCH} --output ./publish python labels:app:&amp;lt;APPNAME&amp;gt; language: pythonstages:build:image:python:3.7.0-alpine3.8commands:-python-mcompileall java / maven labels:app:&amp;lt;APPNAME&amp;gt; language: javastages:build:image:maven:3.5.4-jdk-10-slimcommands:-mvn-Bcleanverify-Dmaven.repo.remote=https://&amp;lt;sonatypenexusserver&amp;gt;/content/groups/public node js labels:app:&amp;lt;APPNAME&amp;gt; language: nodejsstages:build:image:node:8.11.4-alpinecommands:-npminstall--verbose dockerize &amp;amp; push for master branch labels:app:&amp;lt;APPNAME&amp;gt; stages:bake:image:docker:18.06.0-cecommands:-cp/etc/ssl/certs/ca-certificates.crt.-dockerbuild-testafette/${ESTAFETTE_LABEL_APP}:${ESTAFETTE_BUILD_VERSION}.push-to-docker-hub:image:docker:18.06.0-cecommands:-dockerlogin--username=${ESTAFETTE_DOCKER_HUB_USERNAME}--password=&amp;#34;${ESTAFETTE_DOCKER_HUB_PASSWORD}&amp;#34;-dockerpushestafette/${ESTAFETTE_LABEL_APP}:${ESTAFETTE_BUILD_VERSION}when:status==&amp;#39;succeeded&amp;#39;&amp;amp;&amp;amp;branch==&amp;#39;master&amp;#39; notification on failure labels:app:&amp;lt;APPNAME&amp;gt; stages:slack-notify:image:docker:18.06.0-cecommands:-&amp;#39;curl -X POST --data-urlencode &amp;#39;&amp;#39;payload={&amp;#34;channel&amp;#34;: &amp;#34;#build-status&amp;#34;, &amp;#34;username&amp;#34;: &amp;#34;&amp;lt;DOCKER HUB USERNAME&amp;gt;&amp;#34;, &amp;#34;text&amp;#34;: &amp;#34;Build &amp;#39;&amp;#39;${ESTAFETTE_BUILD_VERSION}&amp;#39;&amp;#39; for &amp;#39;&amp;#39;${ESTAFETTE_LABEL_APP}&amp;#39;&amp;#39; has failed!</description></item><item><title>Nested page</title><link>https://estafette.io/getting-started/subsection/nested-page/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://estafette.io/getting-started/subsection/nested-page/</guid><description/></item><item><title>Top-level page</title><link>https://estafette.io/toplevel/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://estafette.io/toplevel/</guid><description/></item></channel></rss>